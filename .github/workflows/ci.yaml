name: CI

on:
  push:
    branches:
      - master
      - staging
      - expt
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install project dependencies
        # if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: |
          yarn
          yarn install
          yarn global add react-scripts

      - name: Run linter
        run: |
          yarn lint:quiet

      - name: Compile application
        env:
          CI: false
        run: yarn build
      - name: Deploy to Stable Production
        if: github.ref == 'refs/heads/master'
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          ls -la
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${DEPLOY_KEY}"
          git clone git@github.com:classtranscribe/classtranscribe.github.io.git
          git config --global user.email "zhenyum3@illinois.edu"
          git config --global user.name "CT-Gitbot"
          cd classtranscribe.github.io
          ls -la
          export SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`
          mkdir -p "static/v-${SHORT_SHA}"
          mv ../build/* "static/v-${SHORT_SHA}/"
          echo "var currentVersion = '${SHORT_SHA}'" > config.js
          git add "static/v-${SHORT_SHA}/*" config.js
          git commit -m "Commit Prod Deploy: ${SHORT_SHA}"
          git push origin main
      - name: Deploy to Staging Production
        if: github.ref == 'refs/heads/staging'
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          ls -la
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${DEPLOY_KEY}"
          git clone git@github.com:classtranscribe/classtranscribe.github.io.git
          git config --global user.email "zhenyum3@illinois.edu"
          git config --global user.name "CT-Gitbot"
          cd classtranscribe.github.io
          ls -la
          export SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`
          mkdir -p "static/v-stg-${SHORT_SHA}"
          mv ../build/* "static/v-stg-${SHORT_SHA}/"
          echo "var currentVersion = '${SHORT_SHA}'" > config_staging.js
          git add "static/v-stg-${SHORT_SHA}/*" config_staging.js
          git commit -m "Commit Staging Deploy: ${SHORT_SHA}"
          git push origin main
    